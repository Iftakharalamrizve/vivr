version: '3.7'
services:
  # Backend node server
  backend-server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: node-server
    container_name: sivr-node-server
    command: npm run dev
    restart: always
    volumes:
      - ./backend/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8081:8081"
    env_file: ./backend/.env
    environment:
      - NODE_ENV=development
    networks:
      - sivr-network

  # Nginx Server 
  nginx:
    container_name: nginx-server
    build:
      context: ./docker/nginx
    volumes:
      - ./phpservice/:/var/www/html/
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      - php-fpm
    ports:
      - "8080:80"
    networks:
      - sivr-network

  # PHP FPM service 
  php-fpm:
    container_name: php-fpm-service
    build:
      context: ./docker/php-fpm
    restart: always
    volumes:
      - ./phpservice/:/var/www/html/
      - ./docker/php-fpm/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./docker/php-fpm/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/php-fpm/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    depends_on:
      - mysql
    networks:
      - sivr-network

  # Mysql service 
  mysql:
    container_name: mysql-service
    build:
      context: ./docker/database
    restart: always
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3309:3306"
    volumes:
      - ./docker/database/data:/var/lib/mysql
      - ./docker/database/cc.sql:/docker-entrypoint-initdb.d/cc.sql
    networks:
      - sivr-network

  # Redis Service
  cache:
    container_name: redis-cache-server
    image: redis:latest
    restart: always
    # entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory ${REDIS_MEMORY_SIZE} --maxmemory-policy allkeys-lru
    ports:
      - '6380:6379'
    volumes:
      - ./docker/database/cache:/data
    networks:
      - sivr-network

networks:
  sivr-network:
    driver: bridge
volumes:
  data-volume:
  node_modules:
  web-root:
    driver: local
